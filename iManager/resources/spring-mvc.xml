<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		">
	<context:property-placeholder ignore-unresolvable="true" location="classpath:config/*.properties" />
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.xinwei"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 解决ajax返回string乱码,需要在annotation-driven之前 -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean> -->
	
	<!-- 处理json数据结构转换 -->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=utf-8</value>
			</list>
		</property>
	</bean>


	<!--  <mvc:annotation-driven />
	-->
	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />

	<!-- 定义JSP文件的位置 -->
	<bean 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
	</bean>

	<!-- 定义无Controller的path<->view直接映射 -->
	<!-- 客户端重定向到 action /index -->
	<mvc:view-controller path="/" view-name="redirect:/login/tologin" />

	
	
	<!-- 如果当前路径是/* 则交给相应的视图解析器 直接解析为视图 -->
	<!-- <mvc:view-controller path="/*" view-name="/views/home" /> -->
	 
	
	<!-- 访问静态资源文件  -->  
	<!-- 不进controller，配置静态访问路径 -->
	<!-- <mvc:view-controller path="/views" view-name="index"/> -->
	
	<!-- <mvc:resources mapping="/views/**" location="/WEB-INF/views/" />   -->
   <!--  <mvc:resources mapping="/views/**" location="/views/" cache-period="31556926"/>-->
	

	<!-- 上传插件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="102400000" />
	</bean>


	


	<!-- 全局异常配置 -->
	<bean id="exceptionResolver" class="com.xinwei.filter.JsonExceptionResolver"></bean>


	<!-- 全局异常配置 start -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Exception">error/500</prop> 
		<prop key="java.lang.Throwable">error/500</prop> <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop> 
		</props> </property> <property name="xinweiusCodes"> <props> <prop key="500">500</prop> 
		<prop key="404">404</prop> <prop key="403">403</prop> </props> </property> 
		设置日志输出级别，不定义则默认不输出警告等错误日志信息 <property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" 
		/> 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 <property name="defaultErrorView" 
		value="error/500" /> 默认HTTP状态码 <property name="defaultxinweiusCode" value="500" 
		/> </bean> -->
	<!-- 全局异常配置 end -->





	<!--NOTE 此处是shiro权限注解配置。必须要在此配置，shiro注解才会生效，而且必须要在spring-mvc.xml中配置才会生效。 start-->
 	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">  
	    <property name="proxyTargetClass" value="true" />  
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
	    <property name="securityManager" ref="securityManager"/>  
	</bean>    -->
	<!-- NOTE 此处是shiro权限注解配置。必须要在此配置，shiro注解才会生效，而且必须要在spring-mvc.xml中配置才会生效。end -->
	
	 <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">    
        <property name="converters">    
            <list>    
                <bean class="com.xinwei.util.date.DateConverter" />    
            </list>    
        </property>    
    </bean>
    
    <mvc:annotation-driven conversion-service="conversionService" />
    
</beans>
